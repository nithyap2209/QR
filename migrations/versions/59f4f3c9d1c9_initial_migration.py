"""initial migration

Revision ID: 59f4f3c9d1c9
Revises: 
Create Date: 2025-04-21 14:25:29.077304

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '59f4f3c9d1c9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email_id', sa.String(length=120), nullable=False),
    sa.Column('NAME', sa.String(length=50), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=True),
    sa.Column('assigned_by', sa.String(length=50), nullable=False),
    sa.Column('permission', sa.ARRAY(sa.String(length=50)), nullable=True),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_id')
    )
    op.create_table('subscriptions',
    sa.Column('S_ID', sa.Integer(), nullable=False),
    sa.Column('plan', sa.String(length=100), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('days', sa.Integer(), nullable=False),
    sa.Column('usage_per_day', sa.Integer(), nullable=False),
    sa.Column('tier', sa.Integer(), nullable=False),
    sa.Column('features', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('plan_type', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('S_ID')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('company_email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('email_confirmed', sa.Boolean(), nullable=True),
    sa.Column('email_confirm_token', sa.String(length=100), nullable=True),
    sa.Column('email_token_created_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('company_email'),
    sa.UniqueConstraint('name')
    )
    op.create_table('payments',
    sa.Column('iid', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=False),
    sa.Column('razorpay_order_id', sa.String(length=100), nullable=False),
    sa.Column('razorpay_payment_id', sa.String(length=100), nullable=True),
    sa.Column('invoice_number', sa.String(length=50), nullable=False),
    sa.Column('invoice_date', sa.DateTime(), nullable=True),
    sa.Column('order_number', sa.String(length=50), nullable=True),
    sa.Column('customer_number', sa.String(length=50), nullable=True),
    sa.Column('purchase_order', sa.String(length=50), nullable=True),
    sa.Column('payment_terms', sa.String(length=100), nullable=True),
    sa.Column('base_amount', sa.Float(), nullable=False),
    sa.Column('gst_rate', sa.Float(), nullable=True),
    sa.Column('gst_amount', sa.Float(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('hsn_code', sa.String(length=20), nullable=True),
    sa.Column('cin_number', sa.String(length=50), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('payment_type', sa.String(length=20), nullable=True),
    sa.Column('previous_subscription_id', sa.Integer(), nullable=True),
    sa.Column('credit_applied', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['previous_subscription_id'], ['subscriptions.S_ID'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.S_ID'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('iid'),
    sa.UniqueConstraint('invoice_number')
    )
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payments_user_id'), ['user_id'], unique=False)

    op.create_table('qr_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('qr_type', sa.String(length=50), nullable=False),
    sa.Column('is_dynamic', sa.Boolean(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('color', sa.String(length=20), nullable=True),
    sa.Column('background_color', sa.String(length=20), nullable=True),
    sa.Column('logo_path', sa.String(length=200), nullable=True),
    sa.Column('frame_type', sa.String(length=50), nullable=True),
    sa.Column('shape', sa.String(length=50), nullable=True),
    sa.Column('template', sa.String(length=50), nullable=True),
    sa.Column('custom_eyes', sa.Boolean(), nullable=True),
    sa.Column('inner_eye_style', sa.String(length=50), nullable=True),
    sa.Column('outer_eye_style', sa.String(length=50), nullable=True),
    sa.Column('inner_eye_color', sa.String(length=20), nullable=True),
    sa.Column('outer_eye_color', sa.String(length=20), nullable=True),
    sa.Column('module_size', sa.Integer(), nullable=True),
    sa.Column('quiet_zone', sa.Integer(), nullable=True),
    sa.Column('error_correction', sa.String(length=1), nullable=True),
    sa.Column('gradient_start', sa.String(length=20), nullable=True),
    sa.Column('gradient_end', sa.String(length=20), nullable=True),
    sa.Column('export_type', sa.String(length=20), nullable=True),
    sa.Column('watermark_text', sa.String(length=100), nullable=True),
    sa.Column('logo_size_percentage', sa.Integer(), nullable=True),
    sa.Column('round_logo', sa.Boolean(), nullable=True),
    sa.Column('frame_text', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('unique_id')
    )
    op.create_table('subscribed_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('U_ID', sa.Integer(), nullable=False),
    sa.Column('S_ID', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('current_usage', sa.Integer(), nullable=True),
    sa.Column('last_usage_reset', sa.DateTime(), nullable=True),
    sa.Column('is_auto_renew', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['S_ID'], ['subscriptions.S_ID'], ),
    sa.ForeignKeyConstraint(['U_ID'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscription_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('U_ID', sa.Integer(), nullable=False),
    sa.Column('S_ID', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=20), nullable=False),
    sa.Column('previous_S_ID', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['S_ID'], ['subscriptions.S_ID'], ),
    sa.ForeignKeyConstraint(['U_ID'], ['user.id'], ),
    sa.ForeignKeyConstraint(['previous_S_ID'], ['subscriptions.S_ID'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoice_addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('street_address', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=100), nullable=False),
    sa.Column('postal_code', sa.String(length=20), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('gst_number', sa.String(length=20), nullable=True),
    sa.Column('pan_number', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.iid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('qr_code_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('ip_address', sa.String(length=50), nullable=True),
    sa.Column('user_agent', sa.String(length=200), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['qr_code_id'], ['qr_code.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usage_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('operation_type', sa.String(length=100), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscribed_users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('usage_logs')
    op.drop_table('scan')
    op.drop_table('invoice_addresses')
    op.drop_table('subscription_history')
    op.drop_table('subscribed_users')
    op.drop_table('qr_code')
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payments_user_id'))

    op.drop_table('payments')
    op.drop_table('user')
    op.drop_table('subscriptions')
    op.drop_table('admin')
    # ### end Alembic commands ###
